{"version":3,"file":"static/js/907.b393fe12.chunk.js","mappings":"gNAIMA,EAAkBC,EAAAA,GAAAA,EAAH,sHAORC,EAAQ,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACpB,OAAO,SAACH,EAAD,UAAkBG,GAC5B,C,0ICTYC,EAAY,mCAAG,WAAOC,GAAP,yFACDC,EAAAA,EAAAA,IAAA,6CAAgDD,EAAhD,4BAHf,qCAEgB,cAClBE,EADkB,OAGxBC,QAAQC,IAAIF,GACNG,EAAUH,EAASI,KAAKC,QAC9BJ,QAAQC,IAAIC,GALY,kBAOjBA,GAPiB,2CAAH,sD,6CCGnBG,EAAaZ,EAAAA,GAAAA,GAAH,8DAKVD,EAAkBC,EAAAA,GAAAA,EAAH,6DAIfa,EAAab,EAAAA,GAAAA,GAAH,4CAGHc,EAAU,WACnB,OAAkCC,EAAAA,EAAAA,WAAS,GAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA8BJ,EAAAA,EAAAA,UAAS,IAAvC,eAAOK,EAAP,KAAgBC,EAAhB,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAkBR,OAfAE,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAmB,mCAAG,2FACxBR,GAAa,GADW,kBAGSd,EAAamB,GAHtB,OAGdI,EAHc,OAIpBL,EAAWK,GAJS,gDAMpBP,EAAS,KAAMQ,SANK,yBAQpBV,GAAa,GARO,4EAAH,qDAWzBQ,GACH,GAAE,CAACH,KAEI,iCACJ,SAACV,EAAD,UACKQ,EAAQQ,OAAS,EAEdR,EAAQS,KAAI,SAAAC,GAAM,OACd,UAACjB,EAAD,YACI,oCAAYiB,EAAOC,WACnB,SAAChC,EAAD,UAAkB+B,EAAOE,YAFZF,EAAOR,GADV,IAOlB,6CAEPN,IAAa,SAACiB,EAAA,EAAD,IACbf,IAAS,SAACjB,EAAA,EAAD,CAAOC,KAAK,0CAG7B,C","sources":["components/Error.js","services/fetchReviews.js","pages/Reviews.js"],"sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\n\nconst StyledParagraph = styled.p`\n    display: flex;\n    justify-content: center;\n    font-size: 20px;\n    font-size: bold;\n`\n\nexport const Error = ({ text }) => {\n    return <StyledParagraph>{text}</StyledParagraph>\n};\n\nError.propTypes = {\n    text: PropTypes.string.isRequired,\n}","import axios from \"axios\";\n\nconst key = \"3021d0a00504ba1e19ba2da5e2aaac4b\";\n\nexport const fetchReviews = async (movieId) => {\n    const response = await axios.get(`https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${key}`);\n\n    console.log(response)\n    const details = response.data.results;\n    console.log(details);\n\n    return details;\n}","import { useEffect, useState } from \"react\";\nimport { fetchReviews } from \"services/fetchReviews\";\nimport { useParams } from \"react-router-dom\";\nimport { Loader } from \"../components/Loader\";\nimport { Error } from \"../components/Error\";\nimport styled from \"styled-components\";\n\nconst StyledList = styled.ul`\nlist-style: none;\nmargin-top: 15px;\n`\n\nconst StyledParagraph = styled.p`\nmargin-left: 15px;\nmargin-top: 10px;`\n\nconst StyledItem = styled.li`\nmargin-bottom: 20px;`\n\nexport const Reviews = () => {\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState(null);\n    const [reviews, setReviews] = useState([]);\n    const { id } = useParams();\n\n\n    useEffect(() => {\n        const handleMoviesRequest = async () => {\n            setIsLoading(true)\n            try {\n                const fetchedReviews = await fetchReviews(id);\n                setReviews(fetchedReviews);\n            } catch (error) {\n                setError(error.message)\n            } finally {\n                setIsLoading(false)\n            }\n        }\n        handleMoviesRequest()\n    }, [id])\n\n    return (<>\n        <StyledList>\n            {reviews.length > 0\n                ?\n                reviews.map(review => (\n                    <StyledItem key={review.id}>\n                        <b>Author: {review.author}</b>\n                        <StyledParagraph>{review.content}</StyledParagraph>\n                    </StyledItem>\n                ))\n                :\n                \"We don't have any reviews for this movie\"}\n        </StyledList>\n        {isLoading && <Loader />}\n        {error && <Error text=\"An error occurred. Please try again\" />}\n    </>\n    )\n};"],"names":["StyledParagraph","styled","Error","text","fetchReviews","movieId","axios","response","console","log","details","data","results","StyledList","StyledItem","Reviews","useState","isLoading","setIsLoading","error","setError","reviews","setReviews","id","useParams","useEffect","handleMoviesRequest","fetchedReviews","message","length","map","review","author","content","Loader"],"sourceRoot":""}